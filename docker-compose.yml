version: "3"

networks:
  default:
    name: web_net
volumes:
  traefik-acme:
    name: traefik-acme
  mongo-data:
  api-data:
    
services:  
    traefik:
        image: traefik:v2.4.8
        container_name: traefik 
        command:
          - "--log.level=INFO"
          - "--log.filepath=/log-file.log"
          - "--log.format=json"
          - "--api=true"
          - "--ping=true"
          - "--accesslog=true"
          - "--accesslog.bufferingsize=100"
          - "--api.insecure=true"
          - "--providers.docker.endpoint=unix:///var/run/docker.sock"
          - "--providers.docker.exposedbydefault=false"
          - "--providers.docker.network=web_net"
          - "--entrypoints.http.address=:80"
          - "--entrypoints.https.address=:443"
          - "--certificatesresolvers.mycert.acme.email=__email__"
          - "--certificatesresolvers.mycert.acme.storage=/acme/acme.json"
          - "--certificatesresolvers.mycert.acme.tlschallenge=true"
          - "--providers.file.filename=/traefik/config.yml"
        ports:
          - 80:80
          - 443:443
        volumes:
          - /etc/localtime:/etc/localtime:ro
          - /var/run/docker.sock:/var/run/docker.sock:ro
          - traefik-acme:/acme
          - ./traefik:/traefik
        networks:
          - default
    
        labels:
          - "traefik.enable=true"
          - "traefik.docker.network=web_net"
          - "traefik.http.routers.traefik.entrypoints=http"
          - "traefik.http.routers.traefik.rule=Host(`traefik.__domainname__`)"
          - "traefik.http.routers.traefik.middlewares=https-redirect"
          - "traefik.http.middlewares.https-redirect.redirectscheme.scheme=https"
          - "traefik.http.middlewares.web-auth.basicauth.users=user:$$apr1$$FBZrrPZc$$1NWZjPzQbUGe0XPEmCcfH."
          - "traefik.http.routers.traefik-secure.middlewares=web-auth"
          - "traefik.http.routers.traefik-secure.entrypoints=https"
          - "traefik.http.routers.traefik-secure.rule=Host(`traefik.__domainname__`)"
          - "traefik.http.routers.traefik-secure.tls=true"
          - "traefik.http.routers.traefik-secure.tls.options=default"
          - "traefik.http.routers.traefik-secure.tls.certresolver=mycert"
          - "traefik.http.services.traefik.loadbalancer.server.port=8080"
          
    mongo:
        image: mongo:4.4.1 # Instead of build you can use 'image: mongo'
        container_name: mongodb
        restart: always
        ports:
            - 17017:27017
        environment:
            MONGO_INITDB_ROOT_USERNAME: admin
            MONGO_INITDB_ROOT_PASSWORD: _mongo_password_
            MONGO_INITDB_DATABASE: dbuser
        volumes:
            - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
            #- mongo-data:/data/db  
        networks:
          - default
      
    backend:   
        image:  officialalikhani/ssh_api:v1.2.1
        container_name: api
        restart: always
        ports:
            - 6655:3838
            - _ssh_port_:22
        environment:
            ENVPORT: 3838
            ENVMONGOPASS: _mongo_password_
            ENVUSER: _ENVUSER_
            ENVPASS: _ENVPASS_
        labels:
             - "traefik.enable=true"
             - "traefik.docker.network=web_net"
             - "traefik.http.routers.backend.entrypoints=http"
             - "traefik.http.routers.backend.rule=Host(`api.__domainname__`)"
             - "traefik.http.routers.backend.service=backend-secure"
             - "traefik.http.routers.backend.middlewares=https-redirect"
             - "traefik.http.routers.backend-secure.entrypoints=https"
             - "traefik.http.routers.backend-secure.rule=Host(`api.__domainname__`)"
             - "traefik.http.routers.backend-secure.tls=true"
             - "traefik.http.routers.backend-secure.tls.options=default"
             - "traefik.http.routers.backend-secure.tls.certresolver=mycert"
             - "traefik.http.routers.backend-secure.service=backend-secure"
             - "traefik.http.services.backend-secure.loadbalancer.server.port=3838"
        networks:
              - default
              
        volumes:
          - api-data:/app/data
             
    web:
        build: 
            context: ../hyper-front-vite/
            dockerfile: Dockerfile
        container_name: web
        restart: always
        ports:
            - _web_port_:3000
        labels:
             - "traefik.enable=true"
             - "traefik.docker.network=web_net"
             - "traefik.http.routers.web.entrypoints=http"
             - "traefik.http.routers.web.rule=Host(`hyper.__domainname__`)"
             - "traefik.http.routers.web.service=web-secure"
             - "traefik.http.routers.web.middlewares=https-redirect"
             - "traefik.http.routers.web-secure.entrypoints=https"
             - "traefik.http.routers.web-secure.rule=Host(`hyper.__domainname__`)"
             - "traefik.http.routers.web-secure.tls=true"
             - "traefik.http.routers.web-secure.tls.options=default"
             - "traefik.http.routers.web-secure.tls.certresolver=mycert"
             - "traefik.http.routers.web-secure.service=web-secure"
             - "traefik.http.services.web-secure.loadbalancer.server.port=3000"
        networks:
              - default

